{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git-repo\\\\React\\\\react-project-1\\\\src\\\\ReactRouter.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\n\n// BrowserRouter 는 우리가 아는 URL 형태를 찾는 Router 이고\n// HashRouter 는 URL에 '#' 이 붙는 형태의 URL 을 찾는 Router\n// 대부분 BrowserRouter 를 사용함\n\n// a 태그를 사용하여 페이지를 이동해도 되지만 그렇게하면 페이지 전체가 다시 로드된다.\n// 이것을 피하기 위해 사용하는것이 Link 태그이다.\n\nfunction ReactRouter() {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/movie/:id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Detail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }))));\n}\n_c = ReactRouter;\nexport default ReactRouter;\nvar _c;\n$RefreshReg$(_c, \"ReactRouter\");","map":{"version":3,"names":["React","BrowserRouter","Router","Switch","Route","Link","Home","Detail","ReactRouter","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["C:/Git-repo/React/react-project-1/src/ReactRouter.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport Detail from \"./routes/Detail\";\r\n\r\n// BrowserRouter 는 우리가 아는 URL 형태를 찾는 Router 이고\r\n// HashRouter 는 URL에 '#' 이 붙는 형태의 URL 을 찾는 Router\r\n// 대부분 BrowserRouter 를 사용함\r\n\r\n// a 태그를 사용하여 페이지를 이동해도 되지만 그렇게하면 페이지 전체가 다시 로드된다.\r\n// 이것을 피하기 위해 사용하는것이 Link 태그이다.\r\n\r\nfunction ReactRouter() {\r\n  return (\r\n    <Router>\r\n      {/* Switch는 Route를 찾는 역할. Route는 URL을 의미.  */}\r\n      <Switch>\r\n        <Route path=\"/movie/:id\">\r\n          <Detail />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default ReactRouter;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,MAAM,MAAM,iBAAiB;;AAEpC;AACA;AACA;;AAEA;AACA;;AAEA,SAASC,WAAWA,CAAA,EAAG;EACrB,oBACER,KAAA,CAAAS,aAAA,CAACP,MAAM;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAELf,KAAA,CAAAS,aAAA,CAACN,MAAM;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACLf,KAAA,CAAAS,aAAA,CAACL,KAAK;IAACY,IAAI,EAAC,YAAY;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBf,KAAA,CAAAS,aAAA,CAACF,MAAM;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACJ,CAAC,eACRf,KAAA,CAAAS,aAAA,CAACL,KAAK;IAACY,IAAI,EAAC,GAAG;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACbf,KAAA,CAAAS,aAAA,CAACH,IAAI;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACF,CACD,CACF,CAAC;AAEb;AAACE,EAAA,GAdQT,WAAW;AAgBpB,eAAeA,WAAW;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}