0. npm install styled-components 명령어로 설치

1. App.js 와 Button.js 만들고 스타일 적용된거 확인
 개발자 도구에서 button 태그에 class명 임의로 들어간거 확인

2. Nesting 문법
 Nesting은 CSS 규칙 안에서 CSS 규칙을 만드는걸 말한다.
 & 선택자와 컴포넌트 선택자가 있다.
 & 선택자 
  - Nesting 에서 &는 부모 선택자를 의미한다.
 컴포넌트 선택자
  - ${} 문법으로 컴포넌트를 작성하여 선택한다.

3. Input 컴포넌트 만들어보기

4. Container 만들고 로그인 폼 만들어보기

5. 다이나믹 스타일링
 HTML 태그의 속성들은 표준속성과 비표준 속성으로 나눌 수 있다.
 예를 들어서 alt={true}등 과 같이, string으로 전달해주어야 하는 
 표준 속성을 boolean으로 전달하게 되면 non-boolean attribute warning이
 발생할 것이다.

 styled-components 공식문서를 확인하면 실제 DOM 엘리먼트에 전달하기 전에,
 styled-components 내부에서 비표준 속성을 자동으로 필터링하고 있다고 한다.

 prefix 를 붙임으로써 해결할 수 있는데 이 prefix의 사용 장점은 아래와 같다.

 성능 최적화:
 styled-components를 사용할 때는 불필요한 속성이 DOM에 전달되는 것을 최대한 
 방지하는 것이 중요하다. DOM에 불필요한 속성이 전달되면, 웹 브라우저는 해당 
 속성을 해석하고 처리해야 하기 때문에 성능 저하의 원인이 된다.

 스타일 가독성 및 유지보수성: 
 컴포넌트를 스타일링할 때 사용하는 속성 이름이 DOM에 전달되는지 여부를 명확하게 
 구분하는 것은 코드의 가독성과 유지보수성을 높여준다. prefix를 사용함으로써, 
 스타일이 적용되는 속성과 실제로 DOM에 전달되는 속성을 명확하게 구분할 수 있다.

 코드 충돌 방지:
 만약 styled-components에서 사용하는 속성과 브라우저에서 지원하는 
 비표준 속성 이름이 충돌한다면, 예상치 못한 동작이 발생할 수 있고, 
 이를 방지하기 위해 prefix를 사용하거나, DOM으로 전달되지 않는 다른 속성으로
 대체함으로써 충돌 가능성을 줄일 수 있다.

6. Input 컴포넌트 속성 추가해보기

7. 스타일 재사용: 상속
 HTML 태그에 스타일링하는 건 styled.tagname을 사용해서 할 수 있다. 
 그런데, JSX 문법으로 직접 만든 컴포넌트나, Styled Components를 사용해
 이미 만들어진 다른 컴포넌트에 스타일을 입히려면 어떻게 해야 할까? 
 이런 상황에서는 상속을 사용하면 된다.

8. 스타일 재사용: css함수

9. Input 컴포넌트: 검색 아이콘 넣기

10. 로그인 페이지: 기본 구현
 




 